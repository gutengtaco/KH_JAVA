package com.kh.chap04_field.model.vo;

/*
 *변수 
 *[종류]
 *-전역 변수 : 클래스 영역 안에 바로 선언하는 변수 => 클래스 내에서면 어디서든 사용 가능.  
 *-지역 변수 : 클래스 영역 안에 어떤 특정한구역(중괄호 안) => 메소드, 제어문(for문,if문 등)
 *
 * 1.전역변수
	 * - 멤버변수(필드, 인스턴스변수)
	 * 생성시점 : new연산자를 통해서 해당 객체가 생성되는 순간, 메모리 영역에 할당.
	 * 소멸시점 : 객체가 소멸할때(값에 null 대입 등), 같이 소멸(GC가 객체를 청소하는 시점)
	  
	 * - 클래스변수(static변수, [예약어])
	 * 			=> 곧바로 실행할 준비가 되어있는 애들.
	 * 			=> 실행하기 전에 객체를 생성하는 단계(new)가 필요하지 않음.
	 * 			=> Stack, Heap, Static으로 메모리 공간 중 하나임.
	 * 			=> 여기서 Stack, Heap은 동적인 공간, static은 정적인 공간임.
	 * 			=> 동적인 공간은 공간을 만들고 없애고, 정직인 공간은 이미 공간이 채워져있고 이를 불러서 사용.
	 * 생성시점 : 프로그램 시작과 동시에 메모리 영역에 할당이 됨. 
	 *         객체생성의 여부와 상관없이, 바로 사용 가능함.
	 * 소멸시점 : 프로그램이 종료될때 삭제됨.
  
  
 * 2. 지역변수(매개변수도 지역변수임)
 * 생성시점 : 특정한 구역(중괄호 안)실행 시, 메모리 영역에 올라감.(기본자료형은 Stack영역에)
 * 소멸시점 : 특정한 구역(중괄호 안)실행이 종료될 때 같이 소멸(메소드 종료, 혹은 반복문 종료 등)
 */

// 변수 선언 위치에 따른 구분(전역변수, 지역변수, 매개변수)
public class FieldTest1 { // FieldTest1 클래스 영역 시작
	
	// 전역변수== 멤버변수 == 인스턴스변수 == 필드 
	private int global;
	
	
	public void test(/*매개변수*/ int num) { // test메소드의 영역 시작
		
		// int num; : 매개변수(일종의 지역변수)
		
		//System.out.println(local) : 선언을 하기 전이라 사용할 수 없음.
		//int local;  지역변수(선언 후 값을 대입하거나 초기화하는 습관을 들이자!)
		//System.out.println(local) : 초기화를 하지 않아 사용할 수 없음.
		int local = 0;
		System.out.println(global); // 멤버변수
		System.out.println(num);	// 매개변수
		System.out.println(local);	// 지역변수
		
	} // test메소드의 영역 끝
	
} // FieldTest1 클래스 영역 끝
